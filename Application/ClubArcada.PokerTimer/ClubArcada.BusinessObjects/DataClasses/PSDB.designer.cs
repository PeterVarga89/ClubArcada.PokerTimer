#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubArcada.BusinessObjects.DataClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PokerSystem")]
	public partial class PSDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTournament(Tournament instance);
    partial void UpdateTournament(Tournament instance);
    partial void DeleteTournament(Tournament instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTournamentDetail(TournamentDetail instance);
    partial void UpdateTournamentDetail(TournamentDetail instance);
    partial void DeleteTournamentDetail(TournamentDetail instance);
    partial void InsertStructure(Structure instance);
    partial void UpdateStructure(Structure instance);
    partial void DeleteStructure(Structure instance);
    partial void InsertStructureDetail(StructureDetail instance);
    partial void UpdateStructureDetail(StructureDetail instance);
    partial void DeleteStructureDetail(StructureDetail instance);
    partial void InsertTournamentResult(TournamentResult instance);
    partial void UpdateTournamentResult(TournamentResult instance);
    partial void DeleteTournamentResult(TournamentResult instance);
    #endregion
		
		public PSDBDataContext() : 
				base(global::ClubArcada.BusinessObjects.Properties.Settings.Default.PokerSystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PSDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tournament> Tournaments
		{
			get
			{
				return this.GetTable<Tournament>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TournamentDetail> TournamentDetails
		{
			get
			{
				return this.GetTable<TournamentDetail>();
			}
		}
		
		public System.Data.Linq.Table<Structure> Structures
		{
			get
			{
				return this.GetTable<Structure>();
			}
		}
		
		public System.Data.Linq.Table<StructureDetail> StructureDetails
		{
			get
			{
				return this.GetTable<StructureDetail>();
			}
		}
		
		public System.Data.Linq.Table<TournamentResult> TournamentResults
		{
			get
			{
				return this.GetTable<TournamentResult>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tournaments")]
	public partial class Tournament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentId;
		
		private System.Guid _LeagueId;
		
		private System.Guid _CreatedByUserId;
		
		private System.Nullable<System.Guid> _DeletedByUserId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private char _GameType;
		
		private string _Description;
		
		private long _OldId;
		
		private System.Nullable<System.DateTime> _DateEnded;
		
		private System.Nullable<bool> _IsHidden;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnLeagueIdChanging(System.Guid value);
    partial void OnLeagueIdChanged();
    partial void OnCreatedByUserIdChanging(System.Guid value);
    partial void OnCreatedByUserIdChanged();
    partial void OnDeletedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnDeletedByUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnGameTypeChanging(char value);
    partial void OnGameTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOldIdChanging(long value);
    partial void OnOldIdChanged();
    partial void OnDateEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndedChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    #endregion
		
		public Tournament()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedByUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeletedByUserId
		{
			get
			{
				return this._DeletedByUserId;
			}
			set
			{
				if ((this._DeletedByUserId != value))
				{
					this.OnDeletedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._DeletedByUserId = value;
					this.SendPropertyChanged("DeletedByUserId");
					this.OnDeletedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameType", DbType="Char(1) NOT NULL")]
		public char GameType
		{
			get
			{
				return this._GameType;
			}
			set
			{
				if ((this._GameType != value))
				{
					this.OnGameTypeChanging(value);
					this.SendPropertyChanging();
					this._GameType = value;
					this.SendPropertyChanged("GameType");
					this.OnGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="BigInt NOT NULL")]
		public long OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnded
		{
			get
			{
				return this._DateEnded;
			}
			set
			{
				if ((this._DateEnded != value))
				{
					this.OnDateEndedChanging(value);
					this.SendPropertyChanging();
					this._DateEnded = value;
					this.SendPropertyChanged("DateEnded");
					this.OnDateEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _NickName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PeronalId;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Comment;
		
		private string _Password;
		
		private bool _IsSms;
		
		private bool _IsMail;
		
		private bool _IsAdmin;
		
		private bool _IsBlocked;
		
		private System.Nullable<System.DateTime> _DateActivated;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private int _OldId;
		
		private bool _IsPersonal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPeronalIdChanging(string value);
    partial void OnPeronalIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsSmsChanging(bool value);
    partial void OnIsSmsChanged();
    partial void OnIsMailChanging(bool value);
    partial void OnIsMailChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnDateActivatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActivatedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnOldIdChanging(int value);
    partial void OnOldIdChanged();
    partial void OnIsPersonalChanging(bool value);
    partial void OnIsPersonalChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeronalId", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PeronalId
		{
			get
			{
				return this._PeronalId;
			}
			set
			{
				if ((this._PeronalId != value))
				{
					this.OnPeronalIdChanging(value);
					this.SendPropertyChanging();
					this._PeronalId = value;
					this.SendPropertyChanged("PeronalId");
					this.OnPeronalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSms", DbType="Bit NOT NULL")]
		public bool IsSms
		{
			get
			{
				return this._IsSms;
			}
			set
			{
				if ((this._IsSms != value))
				{
					this.OnIsSmsChanging(value);
					this.SendPropertyChanging();
					this._IsSms = value;
					this.SendPropertyChanged("IsSms");
					this.OnIsSmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMail", DbType="Bit NOT NULL")]
		public bool IsMail
		{
			get
			{
				return this._IsMail;
			}
			set
			{
				if ((this._IsMail != value))
				{
					this.OnIsMailChanging(value);
					this.SendPropertyChanging();
					this._IsMail = value;
					this.SendPropertyChanged("IsMail");
					this.OnIsMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActivated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActivated
		{
			get
			{
				return this._DateActivated;
			}
			set
			{
				if ((this._DateActivated != value))
				{
					this.OnDateActivatedChanging(value);
					this.SendPropertyChanging();
					this._DateActivated = value;
					this.SendPropertyChanged("DateActivated");
					this.OnDateActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int NOT NULL")]
		public int OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPersonal", DbType="Bit NOT NULL")]
		public bool IsPersonal
		{
			get
			{
				return this._IsPersonal;
			}
			set
			{
				if ((this._IsPersonal != value))
				{
					this.OnIsPersonalChanging(value);
					this.SendPropertyChanging();
					this._IsPersonal = value;
					this.SendPropertyChanged("IsPersonal");
					this.OnIsPersonalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentDetails")]
	public partial class TournamentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentDetailId;
		
		private System.Guid _TournamentId;
		
		private System.Guid _StructureId;
		
		private int _BuyInPrize;
		
		private int _ReBuyPrize;
		
		private int _AddOnPrize;
		
		private int _BuyInStack;
		
		private int _ReBuyStack;
		
		private int _AddOnStack;
		
		private int _BonusStack;
		
		private bool _IsFullPointed;
		
		private bool _IsLeague;
		
		private System.Nullable<int> _ReEntryCount;
		
		private System.Nullable<int> _GTD;
		
		private System.Nullable<int> _ReBuyCount;
		
		private bool _IsFood;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentDetailIdChanging(System.Guid value);
    partial void OnTournamentDetailIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnBuyInPrizeChanging(int value);
    partial void OnBuyInPrizeChanged();
    partial void OnReBuyPrizeChanging(int value);
    partial void OnReBuyPrizeChanged();
    partial void OnAddOnPrizeChanging(int value);
    partial void OnAddOnPrizeChanged();
    partial void OnBuyInStackChanging(int value);
    partial void OnBuyInStackChanged();
    partial void OnReBuyStackChanging(int value);
    partial void OnReBuyStackChanged();
    partial void OnAddOnStackChanging(int value);
    partial void OnAddOnStackChanged();
    partial void OnBonusStackChanging(int value);
    partial void OnBonusStackChanged();
    partial void OnIsFullPointedChanging(bool value);
    partial void OnIsFullPointedChanged();
    partial void OnIsLeagueChanging(bool value);
    partial void OnIsLeagueChanged();
    partial void OnReEntryCountChanging(System.Nullable<int> value);
    partial void OnReEntryCountChanged();
    partial void OnGTDChanging(System.Nullable<int> value);
    partial void OnGTDChanged();
    partial void OnReBuyCountChanging(System.Nullable<int> value);
    partial void OnReBuyCountChanged();
    partial void OnIsFoodChanging(bool value);
    partial void OnIsFoodChanged();
    #endregion
		
		public TournamentDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentDetailId
		{
			get
			{
				return this._TournamentDetailId;
			}
			set
			{
				if ((this._TournamentDetailId != value))
				{
					this.OnTournamentDetailIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentDetailId = value;
					this.SendPropertyChanged("TournamentDetailId");
					this.OnTournamentDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInPrize", DbType="Int NOT NULL")]
		public int BuyInPrize
		{
			get
			{
				return this._BuyInPrize;
			}
			set
			{
				if ((this._BuyInPrize != value))
				{
					this.OnBuyInPrizeChanging(value);
					this.SendPropertyChanging();
					this._BuyInPrize = value;
					this.SendPropertyChanged("BuyInPrize");
					this.OnBuyInPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyPrize", DbType="Int NOT NULL")]
		public int ReBuyPrize
		{
			get
			{
				return this._ReBuyPrize;
			}
			set
			{
				if ((this._ReBuyPrize != value))
				{
					this.OnReBuyPrizeChanging(value);
					this.SendPropertyChanging();
					this._ReBuyPrize = value;
					this.SendPropertyChanged("ReBuyPrize");
					this.OnReBuyPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnPrize", DbType="Int NOT NULL")]
		public int AddOnPrize
		{
			get
			{
				return this._AddOnPrize;
			}
			set
			{
				if ((this._AddOnPrize != value))
				{
					this.OnAddOnPrizeChanging(value);
					this.SendPropertyChanging();
					this._AddOnPrize = value;
					this.SendPropertyChanged("AddOnPrize");
					this.OnAddOnPrizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyInStack", DbType="Int NOT NULL")]
		public int BuyInStack
		{
			get
			{
				return this._BuyInStack;
			}
			set
			{
				if ((this._BuyInStack != value))
				{
					this.OnBuyInStackChanging(value);
					this.SendPropertyChanging();
					this._BuyInStack = value;
					this.SendPropertyChanged("BuyInStack");
					this.OnBuyInStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyStack", DbType="Int NOT NULL")]
		public int ReBuyStack
		{
			get
			{
				return this._ReBuyStack;
			}
			set
			{
				if ((this._ReBuyStack != value))
				{
					this.OnReBuyStackChanging(value);
					this.SendPropertyChanging();
					this._ReBuyStack = value;
					this.SendPropertyChanged("ReBuyStack");
					this.OnReBuyStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnStack", DbType="Int NOT NULL")]
		public int AddOnStack
		{
			get
			{
				return this._AddOnStack;
			}
			set
			{
				if ((this._AddOnStack != value))
				{
					this.OnAddOnStackChanging(value);
					this.SendPropertyChanging();
					this._AddOnStack = value;
					this.SendPropertyChanged("AddOnStack");
					this.OnAddOnStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusStack", DbType="Int NOT NULL")]
		public int BonusStack
		{
			get
			{
				return this._BonusStack;
			}
			set
			{
				if ((this._BonusStack != value))
				{
					this.OnBonusStackChanging(value);
					this.SendPropertyChanging();
					this._BonusStack = value;
					this.SendPropertyChanged("BonusStack");
					this.OnBonusStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullPointed", DbType="Bit NOT NULL")]
		public bool IsFullPointed
		{
			get
			{
				return this._IsFullPointed;
			}
			set
			{
				if ((this._IsFullPointed != value))
				{
					this.OnIsFullPointedChanging(value);
					this.SendPropertyChanging();
					this._IsFullPointed = value;
					this.SendPropertyChanged("IsFullPointed");
					this.OnIsFullPointedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeague", DbType="Bit NOT NULL")]
		public bool IsLeague
		{
			get
			{
				return this._IsLeague;
			}
			set
			{
				if ((this._IsLeague != value))
				{
					this.OnIsLeagueChanging(value);
					this.SendPropertyChanging();
					this._IsLeague = value;
					this.SendPropertyChanged("IsLeague");
					this.OnIsLeagueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReEntryCount", DbType="Int")]
		public System.Nullable<int> ReEntryCount
		{
			get
			{
				return this._ReEntryCount;
			}
			set
			{
				if ((this._ReEntryCount != value))
				{
					this.OnReEntryCountChanging(value);
					this.SendPropertyChanging();
					this._ReEntryCount = value;
					this.SendPropertyChanged("ReEntryCount");
					this.OnReEntryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTD", DbType="Int")]
		public System.Nullable<int> GTD
		{
			get
			{
				return this._GTD;
			}
			set
			{
				if ((this._GTD != value))
				{
					this.OnGTDChanging(value);
					this.SendPropertyChanging();
					this._GTD = value;
					this.SendPropertyChanged("GTD");
					this.OnGTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyCount", DbType="Int")]
		public System.Nullable<int> ReBuyCount
		{
			get
			{
				return this._ReBuyCount;
			}
			set
			{
				if ((this._ReBuyCount != value))
				{
					this.OnReBuyCountChanging(value);
					this.SendPropertyChanging();
					this._ReBuyCount = value;
					this.SendPropertyChanged("ReBuyCount");
					this.OnReBuyCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFood", DbType="Bit NOT NULL")]
		public bool IsFood
		{
			get
			{
				return this._IsFood;
			}
			set
			{
				if ((this._IsFood != value))
				{
					this.OnIsFoodChanging(value);
					this.SendPropertyChanging();
					this._IsFood = value;
					this.SendPropertyChanged("IsFood");
					this.OnIsFoodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Structures")]
	public partial class Structure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StructureId;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private int _DataFreezedLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDataFreezedLevelChanging(int value);
    partial void OnDataFreezedLevelChanged();
    #endregion
		
		public Structure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFreezedLevel", DbType="Int NOT NULL")]
		public int DataFreezedLevel
		{
			get
			{
				return this._DataFreezedLevel;
			}
			set
			{
				if ((this._DataFreezedLevel != value))
				{
					this.OnDataFreezedLevelChanging(value);
					this.SendPropertyChanging();
					this._DataFreezedLevel = value;
					this.SendPropertyChanged("DataFreezedLevel");
					this.OnDataFreezedLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureDetails")]
	public partial class StructureDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StructureDetailId;
		
		private System.Guid _StructureId;
		
		private int _Type;
		
		private int _Number;
		
		private int _Level;
		
		private int _SmallBlind;
		
		private int _BigBlind;
		
		private int _Ante;
		
		private int _Time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStructureDetailIdChanging(System.Guid value);
    partial void OnStructureDetailIdChanged();
    partial void OnStructureIdChanging(System.Guid value);
    partial void OnStructureIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnSmallBlindChanging(int value);
    partial void OnSmallBlindChanged();
    partial void OnBigBlindChanging(int value);
    partial void OnBigBlindChanged();
    partial void OnAnteChanging(int value);
    partial void OnAnteChanged();
    partial void OnTimeChanging(int value);
    partial void OnTimeChanged();
    #endregion
		
		public StructureDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StructureDetailId
		{
			get
			{
				return this._StructureDetailId;
			}
			set
			{
				if ((this._StructureDetailId != value))
				{
					this.OnStructureDetailIdChanging(value);
					this.SendPropertyChanging();
					this._StructureDetailId = value;
					this.SendPropertyChanged("StructureDetailId");
					this.OnStructureDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StructureId
		{
			get
			{
				return this._StructureId;
			}
			set
			{
				if ((this._StructureId != value))
				{
					this.OnStructureIdChanging(value);
					this.SendPropertyChanging();
					this._StructureId = value;
					this.SendPropertyChanged("StructureId");
					this.OnStructureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallBlind", DbType="Int NOT NULL")]
		public int SmallBlind
		{
			get
			{
				return this._SmallBlind;
			}
			set
			{
				if ((this._SmallBlind != value))
				{
					this.OnSmallBlindChanging(value);
					this.SendPropertyChanging();
					this._SmallBlind = value;
					this.SendPropertyChanged("SmallBlind");
					this.OnSmallBlindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigBlind", DbType="Int NOT NULL")]
		public int BigBlind
		{
			get
			{
				return this._BigBlind;
			}
			set
			{
				if ((this._BigBlind != value))
				{
					this.OnBigBlindChanging(value);
					this.SendPropertyChanging();
					this._BigBlind = value;
					this.SendPropertyChanged("BigBlind");
					this.OnBigBlindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ante", DbType="Int NOT NULL")]
		public int Ante
		{
			get
			{
				return this._Ante;
			}
			set
			{
				if ((this._Ante != value))
				{
					this.OnAnteChanging(value);
					this.SendPropertyChanging();
					this._Ante = value;
					this.SendPropertyChanged("Ante");
					this.OnAnteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int NOT NULL")]
		public int Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TournamentResults")]
	public partial class TournamentResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TournamentResultId;
		
		private System.Guid _TournamentId;
		
		private System.Guid _UserId;
		
		private bool _IsTimeBonus;
		
		private double _Points;
		
		private int _Rank;
		
		private int _ReBuyCount;
		
		private int _AddOnCount;
		
		private int _PokerCount;
		
		private int _StraightFlushCount;
		
		private int _RoyalFlushCount;
		
		private System.DateTime _DateAdded;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<System.DateTime> _DateReEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTournamentResultIdChanging(System.Guid value);
    partial void OnTournamentResultIdChanged();
    partial void OnTournamentIdChanging(System.Guid value);
    partial void OnTournamentIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsTimeBonusChanging(bool value);
    partial void OnIsTimeBonusChanged();
    partial void OnPointsChanging(double value);
    partial void OnPointsChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnReBuyCountChanging(int value);
    partial void OnReBuyCountChanged();
    partial void OnAddOnCountChanging(int value);
    partial void OnAddOnCountChanged();
    partial void OnPokerCountChanging(int value);
    partial void OnPokerCountChanged();
    partial void OnStraightFlushCountChanging(int value);
    partial void OnStraightFlushCountChanged();
    partial void OnRoyalFlushCountChanging(int value);
    partial void OnRoyalFlushCountChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDateReEntryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReEntryChanged();
    #endregion
		
		public TournamentResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentResultId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TournamentResultId
		{
			get
			{
				return this._TournamentResultId;
			}
			set
			{
				if ((this._TournamentResultId != value))
				{
					this.OnTournamentResultIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentResultId = value;
					this.SendPropertyChanged("TournamentResultId");
					this.OnTournamentResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TournamentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TournamentId
		{
			get
			{
				return this._TournamentId;
			}
			set
			{
				if ((this._TournamentId != value))
				{
					this.OnTournamentIdChanging(value);
					this.SendPropertyChanging();
					this._TournamentId = value;
					this.SendPropertyChanged("TournamentId");
					this.OnTournamentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTimeBonus", DbType="Bit NOT NULL")]
		public bool IsTimeBonus
		{
			get
			{
				return this._IsTimeBonus;
			}
			set
			{
				if ((this._IsTimeBonus != value))
				{
					this.OnIsTimeBonusChanging(value);
					this.SendPropertyChanging();
					this._IsTimeBonus = value;
					this.SendPropertyChanged("IsTimeBonus");
					this.OnIsTimeBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Float NOT NULL")]
		public double Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReBuyCount", DbType="Int NOT NULL")]
		public int ReBuyCount
		{
			get
			{
				return this._ReBuyCount;
			}
			set
			{
				if ((this._ReBuyCount != value))
				{
					this.OnReBuyCountChanging(value);
					this.SendPropertyChanging();
					this._ReBuyCount = value;
					this.SendPropertyChanged("ReBuyCount");
					this.OnReBuyCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnCount", DbType="Int NOT NULL")]
		public int AddOnCount
		{
			get
			{
				return this._AddOnCount;
			}
			set
			{
				if ((this._AddOnCount != value))
				{
					this.OnAddOnCountChanging(value);
					this.SendPropertyChanging();
					this._AddOnCount = value;
					this.SendPropertyChanged("AddOnCount");
					this.OnAddOnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokerCount", DbType="Int NOT NULL")]
		public int PokerCount
		{
			get
			{
				return this._PokerCount;
			}
			set
			{
				if ((this._PokerCount != value))
				{
					this.OnPokerCountChanging(value);
					this.SendPropertyChanging();
					this._PokerCount = value;
					this.SendPropertyChanged("PokerCount");
					this.OnPokerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StraightFlushCount", DbType="Int NOT NULL")]
		public int StraightFlushCount
		{
			get
			{
				return this._StraightFlushCount;
			}
			set
			{
				if ((this._StraightFlushCount != value))
				{
					this.OnStraightFlushCountChanging(value);
					this.SendPropertyChanging();
					this._StraightFlushCount = value;
					this.SendPropertyChanged("StraightFlushCount");
					this.OnStraightFlushCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoyalFlushCount", DbType="Int NOT NULL")]
		public int RoyalFlushCount
		{
			get
			{
				return this._RoyalFlushCount;
			}
			set
			{
				if ((this._RoyalFlushCount != value))
				{
					this.OnRoyalFlushCountChanging(value);
					this.SendPropertyChanging();
					this._RoyalFlushCount = value;
					this.SendPropertyChanged("RoyalFlushCount");
					this.OnRoyalFlushCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReEntry", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReEntry
		{
			get
			{
				return this._DateReEntry;
			}
			set
			{
				if ((this._DateReEntry != value))
				{
					this.OnDateReEntryChanging(value);
					this.SendPropertyChanging();
					this._DateReEntry = value;
					this.SendPropertyChanged("DateReEntry");
					this.OnDateReEntryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
